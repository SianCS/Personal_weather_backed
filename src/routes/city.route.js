import express from "express";
// üîΩ 1. Import service ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Logic ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
import { searchAndEnsureCity } from "../services/city.service.js";

const cityRoute = express.Router();

/**
 * @route   GET /api/cities/search
 * @desc    ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å API ‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
 * @access  Public
 */
// üîΩ 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° next ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå
cityRoute.get("/search", async (req, res, next) => { 
  const query = req.query.q?.trim();

  if (!query) {
    return res.json({ cities: [] });
  }

  try {
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ service ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á
    const cities = await searchAndEnsureCity(query);
    return res.json({ cities });
  } catch (err) {
    // üîΩ 3. ‡∏™‡πà‡∏á Error ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÉ‡∏´‡πâ error middleware ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
    next(err);
  }
});

export default cityRoute;
